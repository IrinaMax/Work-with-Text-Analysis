# Load dplyr and tidytext
library(dplyr)
library(tidytext)

# Choose the bing lexicon
get_sentiments("bing")

# Choose the nrc lexicon
get_sentiments("nrc") %>%
  count(sentiment) # Count words by sentiment
  # A tibble: 10 x 2
   sentiment        n
   <chr>        <int>
 1 anger         1247
 2 anticipation   839
 3 disgust       1058
 4 fear          1476
 5 joy            689
 
 # geocoded_tweets has been pre-defined
geocoded_tweets

# Access bing lexicon: bing
bing <- get_sentiments("bing")

# Use data frame with text data
geocoded_tweets %>%
  # With inner join, implement sentiment analysis using `bing`
  inner_join(bing)
  Joining, by = "word"
# A tibble: 64,303 x 4
   state   word             freq sentiment
   <chr>   <chr>           <dbl> <chr>    
 1 alabama abuse           7186. negative 
 2 alabama abused          3073. negative 
 3 alabama accomplish      5957. positive 
 4 alabama accomplished   13121. positive 
 5 alabama accomplishment  3036. positive 

# find the words associated with sadness
tweets_nrc

tweets_nrc %>%
  # Filter to only choose the words associated with sadness
  filter(sentiment == "sadness") %>%
  # Group by word
  group_by(word) %>%
  # Use the summarize verb to find the mean frequency
  summarize(freq = mean(freq)) %>%
  # Arrange to sort in order of descending frequency
  arrange(desc(freq))
  ># A tibble: 585 x 2
   word        freq
   <chr>      <dbl>
 1 hate    1253840.
 2 bad      984943.
 3 bitch    787774.
 4 hell     486259.
 5 crazy    447047.
 6 feeling  407562.
 7 leave    397806.
 8 mad      393559.
 9 music    373608.
10 sick     362023.
# ... with 575 more rows

# words associated with joy and plot
tweets_nrc

joy_words <- tweets_nrc %>%
  # Filter to choose only words associated with joy
  filter(sentiment =="joy") %>%
  # Group by each word
  group_by(word) %>%
  # Use the summarize verb to find the mean frequency
  summarize(freq = mean(freq)) %>%
  # Arrange to sort in order of descending frequency
  arrange(desc(freq) )   

# Load ggplot2
library(ggplot2)

joy_words %>%
  top_n(20) %>%
  mutate(word = reorder(word, freq)) %>%
  # Use aes() to put words on the x-axis and frequency on the y-axis
  ggplot(aes(word, freq)) +
  # Make a bar chart with geom_col()
  geom_col(stat = "identity") +
  coord_flip() 
 
 #Do people in different states use different words?
 # tweets_nrc has been pre-defined
tweets_nrc

tweets_nrc %>%
  # Find only the words for the state of Utah and associated with joy
  filter(state == "utah",
      sentiment == "joy") %>%
  # Arrange to sort in order of descending frequency
  arrange(desc(freq))

tweets_nrc %>%
  # Find only the words for the state of Louisiana and associated with joy
  filter(state == "louisiana",
      sentiment == "joy") %>%
  # Arrange to sort in order of descending frequency
  >
  # A tibble: 290 x 4
   state     word         freq sentiment
   <chr>     <chr>       <dbl> <chr>    
 1 louisiana love     3764157. joy      
 2 louisiana good     2758699. joy      
 3 louisiana baby     1184392. joy      
 4 louisiana happy    1176291. joy      
 5 louisiana god       882457. joy  
 
 # Which states have the most positive Twitter users?
 # tweets_bing has been pre-defined
tweets_bing

tweets_bing %>% 
  # Group by two columns: state and sentiment
  group_by(state, sentiment) %>%
  # Use summarize to calculate the mean frequency for these groups
  summarize(freq = mean(freq)) %>%
  spread(sentiment, freq) %>%
  ungroup() %>%
  # Calculate the ratio of positive to negative words
  mutate(ratio = positive / negative,
         state = reorder(state, ratio)) %>%
  # Use aes() to put state on the x-axis and ratio on the y-axis
  ggplot(aes(state, ratio)) +
  # Make a plot with points using geom_point()
  geom_point() +
  coord_flip()
  arrange(desc(freq))
  >
  # A tibble: 290 x 4
   state     word         freq sentiment
   <chr>     <chr>       <dbl> <chr>    
 1 louisiana love     3764157. joy      
 2 louisiana good     2758699. joy      
 3 louisiana baby     1184392. joy      
 4 louisiana happy    1176291. joy      
 5 louisiana god       882457. joy  
 
 # Which states have the most positive Twitter users?
 # tweets_bing has been pre-defined
tweets_bing

tweets_bing %>% 
  # Group by two columns: state and sentiment
  group_by(state, sentiment) %>%
  # Use summarize to calculate the mean frequency for these groups
  summarize(freq = mean(freq)) %>%
  spread(sentiment, freq) %>%
  ungroup() %>%
  # Calculate the ratio of positive to negative words
  mutate(ratio = positive / negative,
         state = reorder(state, ratio)) %>%
  # Use aes() to put state on the x-axis and ratio on the y-axis
  ggplot(aes(state, ratio)) +
  # Make a plot with points using geom_point()
  geom_point() +
  coord_flip()
