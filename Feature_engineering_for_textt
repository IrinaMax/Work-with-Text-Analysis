# Automated Text Feature Engineering using textfeatures in R
install.packages("textfeatures")

install.packages("itunesr")
install.packages("textfeatures")
install.packages("tidyverse")

library(itunesr)
library(textfeatures)
library(tidyverse)

# extracting reviews
#Get UK Reviews of Fifa official world cup ios app
#https://itunes.apple.com/us/app/2018-fifa-world-cup-russia/id756904853?mt=8

reviews1 <- getReviews(756904853,"GB",1)
reviews1
reviews2 <- getReviews(756904853,"GB",2)
reviews3 <- getReviews(756904853,"GB",3)
reviews4 <- getReviews(756904853,"GB",4)

#Combining all the reviews into one dataframe
reviews <- rbind(reviews1,
                 reviews2,
                 reviews3,
                 reviews4)

#Combining all the reviews into one dataframe
reviews <- rbind(reviews1,
                 reviews2,
                 reviews3,
                 reviews4)

# generate text features
feat <- textfeatures(reviews$Review)

# check what all features generated 
glimpse(feat)
# merging features with original reviews

reviews_all <- cbind(reviews, feat)

reviews_all %>% summary
# merging features with original reviews
reviews_all %>% ggplot(aes(n_charsperword, n_chars, colour = Rating )) + geom_point()


reviews_all %>% 
  ggplot(aes(n_charsperword, n_words)) + geom_point() +
  facet_wrap(~Rating) +
  stat_smooth()


# how to retrive reviews
# install itunesr directly from CRAN:
install.packages("itunesr")

#  the development version from GitHub:
# install.packages("devtools")
devtools::install_github("amrrs/itunesr")

library(itunesr)
getReviews(368677368,'us',1)
getAttributes(742044692,'in')

library(itunesr)

#Latest (Page 1) Uber Reviews for the Country: US
uber_reviews <- getReviews(368677368,'us',1)

#Displaying the column names 
names(uber_reviews)

#Ratings count from the 50 Reviews
table(uber_reviews$Rating)

# tuber: Access YouTube API via R

# install.packages("devtools")
devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
# To get a quick overview of some important functions in tuber, check out this article. For a fun vignette about how to analyze emojis in YouTube comments, see here.
# 
# Using tuber
# To get going, get the application id and password from Google Developer Console (see https://developers.google.com/youtube/v3/getting-started). Enable all the YouTube APIs. Also enable Freebase API. Then set the application id and password via the yt_oauth function. For more information about YouTube OAuth, see YouTube OAuth Guide.

yt_oauth("app_id", "app_password")
#Note: If you are on ubuntu, you may have to run the following before doing anything:
  
  httr::set_config( config( ssl_verifypeer = 0L ) )
#Get Statistics of a Video

get_stats(video_id = "N708P-A45D0")
#Get Information About a Video

get_video_details(video_id = "N708P-A45D0")
#Get Captions of a Video

get_captions(video_id = "yJXTXN4xrI8")
#Search Videos

yt_search("Barack Obama")
#Get All the Comments Including Replies

get_all_comments(video_id = "a-UQz7fqR3w")

